<div id="lhs-test"
><h1
  >lhs test</h1
  ><p
  ><code
    >unsplit</code
    > is an arrow that takes a pair of values and combines them to return a single value:</p
  ><pre class="sourceCode literatehaskell"
  ><code
    ><span class="Char Special"
      >&gt;</span
      ><span class="Function FunctionDefinition"
      > unsplit ::</span
      ><span class="Normal NormalText"
      > (Arrow a) =&gt; (b -&gt; c -&gt; d) -&gt; a (b, c) d</span
      ><br
       /><span class="Char Special"
      >&gt;</span
      ><span class="Normal NormalText"
      > unsplit = arr . </span
      ><span class="Function"
      >uncurry</span
      ><span class="Normal NormalText"
      >       </span
      ><br
       /><span class="Char Special"
      >&gt;</span
      ><span class="Normal NormalText"
      >           </span
      ><span class="Comment"
      >-- arr (\op (x,y) -&gt; x `op` y) </span
      ><br
       /></code
    ></pre
  ><p
  ><code
    >(***)</code
    > combines two arrows into a new arrow by running the two arrows on a pair of values (one arrow on the first item of the pair and one arrow on the second item of the pair).</p
  ><pre
  ><code
    >f *** g = first f &gt;&gt;&gt; second g
</code
    ></pre
  ><p
  >Block quote:</p
  ><blockquote
  ><p
    >foo bar</p
    ></blockquote
  ></div
>
